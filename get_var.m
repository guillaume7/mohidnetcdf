function var2d = get_var(s_cfg, s_at, bl_corner, tr_corner, ...
                        m_bl_corner, m_tr_corner)
%function var2d = get_var(s_cfg, s_at, bl_corner, tr_corner, ...
%                       m_bl_corner, m_tr_corner)
%
% Extracts the MOHID netcdf data with the landmask
%

    switch (s_cfg.filetype)
        
        case 'mat'
            var2d = getmat(s_cfg.matfile, ...
                    s_at.varname, ...
                    m_bl_corner, ...
                    m_tr_corner, ...
                    1 ...  %stride
                    );
            mask = getmat(s_cfg.matfile, ...
                    'matmask', ...
                    m_bl_corner, ...
                    m_tr_corner, ...
                    1 ...  %stride
                    );
                
        case 'nc'
            
            start_nc = bl_corner - ones(size(bl_corner));
            count_nc = tr_corner - start_nc;
            var2d = nc_varget(s_cfg.file, ...
                        s_at.varname, ...
                        start_nc,  ... % bl_corner
                        count_nc ...
                    );
                
            m_start_nc = m_bl_corner - ones(size(m_bl_corner));
            m_count_nc = m_tr_corner - m_start_nc;
            mask = nc_varget(s_cfg.file, ...
                        'mask', ...
                        m_start_nc,  ... % bl_corner (tzxy)
                        m_count_nc ...
                    );

        case 'cdf'
            var2d = getnc(s_cfg.file, ...
                      s_at.varname, ...
                      bl_corner,  ... % bl_corner
                      tr_corner ... %tr_corner
                      );
            mask = getnc(s_cfg.file, ...
                    'mask', ...
                    m_bl_corner,  ... % bl_corner (tzxy)
                    m_tr_corner ... %tr_corner (tzxy)
                    );

        case 'hdf5'
            var2d = gethdf5_2d(s_cfg.file, ...
                    s_at.varname, ...
                    bl_corner, ...
                    tr_corner, ...
                    1 ...  %stride
                    );
            mask = gethdf5_2d(s_cfg.file, ...
                    '/Grid/WaterPoints3D', ...
                    bl_corner, ...
                    tr_corner, ...
                    1 ...  %stride
                    );

        otherwise
            disp ('Error: wrong filetype defined! mat, cdf or hdf5 only!');
            
    end
    
    nn = find(mask == 0); % Find land
    mask(nn) = NaN; % and NaN it...
    var2d = var2d .* mask; % Apply the landmask to our data.
    